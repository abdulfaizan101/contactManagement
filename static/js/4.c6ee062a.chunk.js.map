{"version":3,"sources":["components/nav.js","components/contactItem.js","pages/contactList.js"],"names":["className","id","item","setEditIndex","delet","history","useHistory","onClick","push","src","alt","name","number","priority","ContactList","props","allList","contacts","sort","a","b","addContact","e","length","onDragEnd","result","items","Array","from","source","index","destination","setContacts","droppableId","provided","droppableProps","ref","innerRef","map","draggableId","active","draggableProps","dragHandleProps","setActive","placeholder"],"mappings":"sIAAe,eACb,OAAQ,qCACN,gCACE,+BACE,6BAAI,yCACJ,6BAAI,8CAGR,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAYC,GAAG,YAA9B,UACE,yBACA,yBACA,4BAEF,qBAAID,UAAU,cAAd,uBAAsC,mD,gFCb7B,cAAoC,IAAjCE,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MAC9BC,EAAUC,cAKhB,OACE,sBAAKN,UAAU,OAAf,UACE,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,QAAf,UACE,mBAAGO,QAAS,WAPlBJ,EAO+BD,GAN/BG,EAAQG,KAAK,iBAMP,SAAkC,qBAAKC,IAAI,gCAAgCC,IAAI,OAC/E,mBAAGH,QAAS,WAAQH,EAAMF,EAAKD,KAA/B,SAAsC,qBAAKQ,IAAI,gCAAgCC,IAAI,UAErF,sBAAKV,UAAU,YAAf,UACE,+BAAM,4BAAIE,EAAKS,SACf,+BAAOT,EAAKU,eAGhB,qBAAKZ,UAAU,SAAf,SACGE,EAAKW,e,QC+CCC,UA7Df,SAAqBC,GACnB,IAAMV,EAAUC,cACZU,EAAUD,EAAME,SAASC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEN,SAAWO,EAAEP,SAAY,GAAM,KACvEQ,EAAa,SAACC,GAClBP,EAAMZ,aAAa,MACnBE,EAAQG,KAAK,iBAUf,OACE,qBAAKR,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,IACA,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,kBAAf,SAC4B,GAAzBe,EAAME,SAASM,OACd,sBAAKvB,UAAU,cAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,wCAAwCO,QAASc,EAAhE,yBACA,mBAAGrB,UAAU,OAAb,6EAEF,qBAAKS,IAAI,oCAAoCC,IAAI,QAEnD,sBAAKV,UAAU,eAAf,UACE,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,wCAAwCO,QAASc,EAAhE,2BAEF,cAAC,IAAD,CAAiBG,UA1B/B,SAAyBC,GAEvB,IAAMC,EAAQC,MAAMC,KAAKb,EAAME,UAC3BJ,EAAWa,EAAMD,EAAOI,OAAOC,OAApB,SACfJ,EAAMD,EAAOI,OAAOC,OAApB,SAAyCJ,EAAMD,EAAOM,YAAYD,OAAzB,SACzCJ,EAAMD,EAAOM,YAAYD,OAAzB,SAA8CjB,EAC9CE,EAAMiB,YAAYN,IAoBN,SACE,cAAC,IAAD,CAAWO,YAAY,aAAvB,SACG,SAACC,GAAD,OACC,6CAAKlC,UAAU,kCAAqCkC,EAASC,gBAA7D,IAA6EC,IAAKF,EAASG,SAA3F,SACGrB,EAAQsB,KAAI,SAACpC,EAAM4B,GAClB,OAAQ,cAAC,IAAD,CAAyBS,YAAarC,EAAKD,GAAK,GAAI6B,MAAOA,EAA3D,SACL,SAACI,GAAD,OACC,0DAAKlC,UAAWe,EAAMyB,QAAUtC,EAAKW,SAAW,qBAAuB,cAAeuB,IAAKF,EAASG,UAAcH,EAASO,gBAAoBP,EAASQ,iBAAxJ,IAAyKnC,QAAS,WAAQQ,EAAM4B,UAAUzC,EAAKW,WAA/M,UACE,cAAC,EAAD,CAAaX,KAAMA,EAAMsC,OAAQzB,EAAMyB,OAAQG,UAAW5B,EAAM4B,UAAWvC,MAAOW,EAAMX,MAAOD,aAAcY,EAAMZ,eAClH+B,EAASU,kBAJQ1C,EAAKD,oBAgB7C","file":"static/js/4.c6ee062a.chunk.js","sourcesContent":["export default () => {\r\n  return (<>\r\n    <aside>\r\n      <ul>\r\n        <li><a>Link 1</a></li>\r\n        <li><a>Link 2</a></li>\r\n      </ul>\r\n    </aside>\r\n    <div className=\"my-navbar\">\r\n      <div className=\"hamburger\" id=\"nav-icon1\">\r\n        <span />\r\n        <span />\r\n        <span />\r\n      </div>\r\n      <h2 className=\"float-start\">Emergency <b>Contact</b></h2>\r\n    </div>\r\n  </>);\r\n}","import { useHistory } from 'react-router-dom'\r\nexport default ({ item, setEditIndex, delet }) => {\r\n  const history = useHistory();\r\n  const edit = (id) => {\r\n    setEditIndex(id)\r\n    history.push('/saveContact')\r\n  }\r\n  return (\r\n    <div className=\"list\">\r\n      <div className=\"slide\">\r\n        <div className=\"icons\">\r\n          <a onClick={() => { edit(item) }}><img src=\"assets/images/pencil_icon.svg\" alt=\"\" /></a>\r\n          <a onClick={() => { delet(item.id) }}><img src=\"assets/images/delete_icon.svg\" alt=\"\" /></a>\r\n        </div>\r\n        <div className=\"text_area\">\r\n          <span><b>{item.name}</b></span>\r\n          <span>{item.number}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"number\">\r\n        {item.priority}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Nav from '../components/nav'\r\nimport ContactItem from '../components/contactItem';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nfunction ContactList(props) {\r\n  const history = useHistory();\r\n  let allList = props.contacts.sort((a, b) => a.priority > b.priority && 1 || -1)\r\n  const addContact = (e) => {\r\n    props.setEditIndex(null)\r\n    history.push('/saveContact');\r\n  }\r\n  function handleOnDragEnd(result) {\r\n\r\n    const items = Array.from(props.contacts);\r\n    let priority = items[result.source.index]['priority'];\r\n    items[result.source.index]['priority'] = items[result.destination.index]['priority'];\r\n    items[result.destination.index]['priority'] = priority;\r\n    props.setContacts(items);\r\n  }\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"container\">\r\n        <Nav />\r\n        <div className=\"main-container\">\r\n          <div className=\"inner_container\">\r\n            {props.contacts.length == 0 ?\r\n              <div className=\"add_contact\">\r\n                <div className=\"text-center\">\r\n                  <div className=\"btn btn-brand rounded btn-center mb-3\" onClick={addContact}>ADD CONTACT</div>\r\n                  <p className=\"mb-5\">Let's start adding contacts of your loved ones in your list!</p>\r\n                </div>\r\n                <img src=\"assets/images/img-add-contact.svg\" alt=\"\" />\r\n              </div> :\r\n              <div className=\"contact_list\">\r\n                <div className=\"text-center\">\r\n                  <div className=\"btn btn-brand rounded btn-center mb-3\" onClick={addContact}>ADD CONTACT</div>\r\n                </div>\r\n                <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                  <Droppable droppableId=\"characters\">\r\n                    {(provided) => (\r\n                      <div className=\"contacts_list_group characters\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                        {allList.map((item, index) => {\r\n                          return (<Draggable key={item.id} draggableId={item.id + \"\"} index={index}>\r\n                            {(provided) => (\r\n                              <div className={props.active == item.priority ? \"list_parent active\" : \"list_parent\"} ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} onClick={() => { props.setActive(item.priority) }}>\r\n                                <ContactItem item={item} active={props.active} setActive={props.setActive} delet={props.delet} setEditIndex={props.setEditIndex} />\r\n                                {provided.placeholder}\r\n                              </div>\r\n                            )}\r\n                          </Draggable>);\r\n                        })}\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                </DragDropContext>\r\n              </div>\r\n            }\r\n          </div>\r\n          <footer />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactList;"],"sourceRoot":""}